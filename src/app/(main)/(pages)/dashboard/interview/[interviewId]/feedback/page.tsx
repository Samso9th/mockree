'use client'

import React, { useEffect, useState } from 'react'
import { db } from '../../../../../../../../utils/db'
import { UserAnswer } from '../../../../../../../../utils/schema'
import { eq } from 'drizzle-orm'
import {
  Collapsible,
  CollapsibleContent,
  CollapsibleTrigger,
} from "@/components/ui/collapsible"
import { ChevronsUpDown } from 'lucide-react'
import { useTransitionReplaceNavigation } from '@/lib/transition-replace'

type FeedbackItem = typeof UserAnswer.$inferSelect

const Feedback = ({ params }: { params: { interviewId: string } }) => {

  const [feedbackList, setFeedbackList] = useState<FeedbackItem[]>([]);
  const { transitionReplaceTo } = useTransitionReplaceNavigation();

  const handleClick = () => {
    transitionReplaceTo(`/dashboard`);
  };

  useEffect(() => {
    const fetchFeedback = async () => {
      try {
        const response = await fetch(`/api/feedback?interviewId=${params.interviewId}`);
        if (!response.ok) {
          throw new Error('Failed to fetch feedback');
        }
        const data = await response.json();
        setFeedbackList(data);
      } catch (error) {
        console.error('Error fetching feedback:', error);
        // Optionally, set an error state here to display to the user
      }
    };

    fetchFeedback();
  }, [params.interviewId]);

  return (
    <div className='p-10'>
      {feedbackList?.length == 0 ?
        <h2 className='font-bold text-xl text-gray-500'>No Interview Feedback Record Found</h2>
        :
        <>
          <h2 className='text-3xl font-bold text-green-500'>
            Well Done!
          </h2>
          <h2 className='font-bold text-2xl'>
            Below are your Results and Feedback
          </h2>
          <h2 className='text-[#1c4b82] text-lg my-3'>
            Overall Rating: <strong>
              {((feedbackList.reduce((acc, item) => acc + item.rating, 0) / 5) * 10).toFixed(2)}%
            </strong>
          </h2>
          <h2 className='text-sm text-gray-700'>
            Below are your Interview Questions and best Answers generated by AI to serve as a scheme of work Click each one to see how you did.
          </h2>
          {feedbackList && feedbackList.map((item, index) => (
            <Collapsible key={index} className='mt-7'>
              <CollapsibleTrigger className='p-2 bg-[#999999] dark:bg-[#0a0a0a] rounded-lg flex justify-between my-2 text-left border-black dark:border-gray-600 border gap-7 w-full'>
                {item.question} <ChevronsUpDown className="h-5 w-5" />
              </CollapsibleTrigger>
              <CollapsibleContent>
                <div className='flex flex-col gap-2'>
                  <h2 className='text-[#1c4b82] p-2 border rounded-lg'>
                    <strong>Rating: </strong>
                    {item.rating}
                  </h2>
                  <h2 className='text-sm text-black bg-red-200 dark:bg-red-200 p-2 border rounded-lg'>
                    <strong>Your Answer: </strong>
                    {item.userAnswer}
                  </h2>
                  <h2 className='text-sm text-black bg-blue-300 dark:bg-blue-300 p-2 border rounded-lg'>
                    <strong>AI Feedback: </strong>
                    {item.feedback}
                  </h2>
                  <h2 className='text-sm text-black bg-green-200 dark:bg-green-200 p-2 border rounded-lg'>
                    <strong>Correct Answer: </strong>
                    {item.correctAnswer}
                  </h2>
                </div>
              </CollapsibleContent>
            </Collapsible>
          ))}
        </>
      }

      <div className="flex justify-center mt-8">
        <button
          className="inline-flex h-12 animate-shimmer items-center justify-center rounded-md border border-slate-800 bg-[linear-gradient(110deg,#000103,45%,#1e2631,55%,#000103)] bg-[length:200%_100%] px-6 font-medium text-slate-400 transition-colors focus:outline-none focus:ring-2 focus:ring-slate-400 focus:ring-offset-2 focus:ring-offset-slate-50"
          onClick={handleClick}
        >
          Back Home
        </button>
      </div>

    </div>
  )
}

export default Feedback